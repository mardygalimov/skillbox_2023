# В рамках программы колонизации Марса компания «Спейс Инжиниринг» вывела особую породу черепах, которые, по задумке,
# должны размножаться, откладывая яйца в марсианском грунте. Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода. Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили, что уровень опасности для черепашьих яиц рассчитывается по формуле:
# D = x^3 − 3x^2 − 12x + 10, где x — глубина кладки в метрах, а D — уровень опасности в условных единицах.
# Для тестирования гипотезы нужно взять пробу грунта на безопасной, согласно формуле, глубине.
# Напишите программу, находящую такое значение глубины х, при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение х,
# удовлетворяющее этому отклонению. Известно, что глубина точно больше нуля и меньше четырёх метров.
# Обеспечьте контроль ввода.
def formula(x):
    return x ** 3 - 3 * x ** 2 - 12 * x + 10


# поиск глубины при помощи половинного деления
def calculate_safe_depth(danger_lvl):
    min_depth = 0
    max_depth = 4
    result = (min_depth + max_depth) / 2

    # поиск до тех пор пока не удовлетворит заданной точности
    while abs(formula(result)) >= danger_lvl:
        # какой из сторон точнее, т.е. ближе к 0
        if abs(formula(min_depth)) < abs(formula(max_depth)):
            max_depth = result
        else:
            min_depth = result

        result = (min_depth + max_depth) / 2
    return result

def main_function():
    accept_danger_lvl = float(input('Введите максимально допустимый уровень опасности: '))
    result = calculate_safe_depth(accept_danger_lvl)
    print('Приблизительная глубина безопасной кладки: ', result, 'm')

main_function()